// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SERENITYINTERFACE_H_
#define FLATBUFFERS_GENERATED_SERENITYINTERFACE_H_

#include "flatbuffers/flatbuffers.h"

#include "WorkerIndexProto_generated.h"
#include "model_generated.h"
#include "interface_generated.h"

struct GetWorkerProcessEndpointRequestProto;
struct GetWorkerProcessEndpointRequestProtoBuilder;

struct WorkerProcessEndpointProto;
struct WorkerProcessEndpointProtoBuilder;

struct GetWorkerProcessEndpointResponseProto;
struct GetWorkerProcessEndpointResponseProtoBuilder;

enum class GetWorkerProcessEndpointErrorUnionProto : uint8_t {
  NONE = 0,
  ErrorCodeResponseProto = 1,
  WorkerProcessEndpointProto = 2,
  MIN = NONE,
  MAX = WorkerProcessEndpointProto
};

inline const GetWorkerProcessEndpointErrorUnionProto (&EnumValuesGetWorkerProcessEndpointErrorUnionProto())[3] {
  static const GetWorkerProcessEndpointErrorUnionProto values[] = {
    GetWorkerProcessEndpointErrorUnionProto::NONE,
    GetWorkerProcessEndpointErrorUnionProto::ErrorCodeResponseProto,
    GetWorkerProcessEndpointErrorUnionProto::WorkerProcessEndpointProto
  };
  return values;
}

inline const char * const *EnumNamesGetWorkerProcessEndpointErrorUnionProto() {
  static const char * const names[4] = {
    "NONE",
    "ErrorCodeResponseProto",
    "WorkerProcessEndpointProto",
    nullptr
  };
  return names;
}

inline const char *EnumNameGetWorkerProcessEndpointErrorUnionProto(GetWorkerProcessEndpointErrorUnionProto e) {
  if (flatbuffers::IsOutRange(e, GetWorkerProcessEndpointErrorUnionProto::NONE, GetWorkerProcessEndpointErrorUnionProto::WorkerProcessEndpointProto)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesGetWorkerProcessEndpointErrorUnionProto()[index];
}

template<typename T> struct GetWorkerProcessEndpointErrorUnionProtoTraits {
  static const GetWorkerProcessEndpointErrorUnionProto enum_value = GetWorkerProcessEndpointErrorUnionProto::NONE;
};

template<> struct GetWorkerProcessEndpointErrorUnionProtoTraits<ErrorCodeResponseProto> {
  static const GetWorkerProcessEndpointErrorUnionProto enum_value = GetWorkerProcessEndpointErrorUnionProto::ErrorCodeResponseProto;
};

template<> struct GetWorkerProcessEndpointErrorUnionProtoTraits<WorkerProcessEndpointProto> {
  static const GetWorkerProcessEndpointErrorUnionProto enum_value = GetWorkerProcessEndpointErrorUnionProto::WorkerProcessEndpointProto;
};

bool VerifyGetWorkerProcessEndpointErrorUnionProto(flatbuffers::Verifier &verifier, const void *obj, GetWorkerProcessEndpointErrorUnionProto type);
bool VerifyGetWorkerProcessEndpointErrorUnionProtoVector(flatbuffers::Verifier &verifier, const flatbuffers::Vector<flatbuffers::Offset<void>> *values, const flatbuffers::Vector<uint8_t> *types);

struct GetWorkerProcessEndpointRequestProto FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef GetWorkerProcessEndpointRequestProtoBuilder Builder;
  struct Traits;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_LOG_CONTEXT = 4,
    VT_WORKER_ID = 6
  };
  const flatbuffers::String *log_context() const {
    return GetPointer<const flatbuffers::String *>(VT_LOG_CONTEXT);
  }
  uint64_t worker_id() const {
    return GetField<uint64_t>(VT_WORKER_ID, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_LOG_CONTEXT) &&
           verifier.VerifyString(log_context()) &&
           VerifyField<uint64_t>(verifier, VT_WORKER_ID) &&
           verifier.EndTable();
  }
};

struct GetWorkerProcessEndpointRequestProtoBuilder {
  typedef GetWorkerProcessEndpointRequestProto Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_log_context(flatbuffers::Offset<flatbuffers::String> log_context) {
    fbb_.AddOffset(GetWorkerProcessEndpointRequestProto::VT_LOG_CONTEXT, log_context);
  }
  void add_worker_id(uint64_t worker_id) {
    fbb_.AddElement<uint64_t>(GetWorkerProcessEndpointRequestProto::VT_WORKER_ID, worker_id, 0);
  }
  explicit GetWorkerProcessEndpointRequestProtoBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<GetWorkerProcessEndpointRequestProto> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<GetWorkerProcessEndpointRequestProto>(end);
    fbb_.Required(o, GetWorkerProcessEndpointRequestProto::VT_LOG_CONTEXT);
    return o;
  }
};

inline flatbuffers::Offset<GetWorkerProcessEndpointRequestProto> CreateGetWorkerProcessEndpointRequestProto(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> log_context = 0,
    uint64_t worker_id = 0) {
  GetWorkerProcessEndpointRequestProtoBuilder builder_(_fbb);
  builder_.add_worker_id(worker_id);
  builder_.add_log_context(log_context);
  return builder_.Finish();
}

struct GetWorkerProcessEndpointRequestProto::Traits {
  using type = GetWorkerProcessEndpointRequestProto;
  static auto constexpr Create = CreateGetWorkerProcessEndpointRequestProto;
};

inline flatbuffers::Offset<GetWorkerProcessEndpointRequestProto> CreateGetWorkerProcessEndpointRequestProtoDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *log_context = nullptr,
    uint64_t worker_id = 0) {
  auto log_context__ = log_context ? _fbb.CreateString(log_context) : 0;
  return CreateGetWorkerProcessEndpointRequestProto(
      _fbb,
      log_context__,
      worker_id);
}

struct WorkerProcessEndpointProto FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef WorkerProcessEndpointProtoBuilder Builder;
  struct Traits;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_SETUP_WORKER_PORT = 4,
    VT_DELETE_WORKER_PORT = 6,
    VT_USER_PORT = 8
  };
  uint16_t setup_worker_port() const {
    return GetField<uint16_t>(VT_SETUP_WORKER_PORT, 0);
  }
  uint16_t delete_worker_port() const {
    return GetField<uint16_t>(VT_DELETE_WORKER_PORT, 0);
  }
  uint16_t user_port() const {
    return GetField<uint16_t>(VT_USER_PORT, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint16_t>(verifier, VT_SETUP_WORKER_PORT) &&
           VerifyField<uint16_t>(verifier, VT_DELETE_WORKER_PORT) &&
           VerifyField<uint16_t>(verifier, VT_USER_PORT) &&
           verifier.EndTable();
  }
};

struct WorkerProcessEndpointProtoBuilder {
  typedef WorkerProcessEndpointProto Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_setup_worker_port(uint16_t setup_worker_port) {
    fbb_.AddElement<uint16_t>(WorkerProcessEndpointProto::VT_SETUP_WORKER_PORT, setup_worker_port, 0);
  }
  void add_delete_worker_port(uint16_t delete_worker_port) {
    fbb_.AddElement<uint16_t>(WorkerProcessEndpointProto::VT_DELETE_WORKER_PORT, delete_worker_port, 0);
  }
  void add_user_port(uint16_t user_port) {
    fbb_.AddElement<uint16_t>(WorkerProcessEndpointProto::VT_USER_PORT, user_port, 0);
  }
  explicit WorkerProcessEndpointProtoBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<WorkerProcessEndpointProto> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<WorkerProcessEndpointProto>(end);
    return o;
  }
};

inline flatbuffers::Offset<WorkerProcessEndpointProto> CreateWorkerProcessEndpointProto(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint16_t setup_worker_port = 0,
    uint16_t delete_worker_port = 0,
    uint16_t user_port = 0) {
  WorkerProcessEndpointProtoBuilder builder_(_fbb);
  builder_.add_user_port(user_port);
  builder_.add_delete_worker_port(delete_worker_port);
  builder_.add_setup_worker_port(setup_worker_port);
  return builder_.Finish();
}

struct WorkerProcessEndpointProto::Traits {
  using type = WorkerProcessEndpointProto;
  static auto constexpr Create = CreateWorkerProcessEndpointProto;
};

struct GetWorkerProcessEndpointResponseProto FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef GetWorkerProcessEndpointResponseProtoBuilder Builder;
  struct Traits;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_VALUE_TYPE = 4,
    VT_VALUE = 6
  };
  GetWorkerProcessEndpointErrorUnionProto value_type() const {
    return static_cast<GetWorkerProcessEndpointErrorUnionProto>(GetField<uint8_t>(VT_VALUE_TYPE, 0));
  }
  const void *value() const {
    return GetPointer<const void *>(VT_VALUE);
  }
  template<typename T> const T *value_as() const;
  const ErrorCodeResponseProto *value_as_ErrorCodeResponseProto() const {
    return value_type() == GetWorkerProcessEndpointErrorUnionProto::ErrorCodeResponseProto ? static_cast<const ErrorCodeResponseProto *>(value()) : nullptr;
  }
  const WorkerProcessEndpointProto *value_as_WorkerProcessEndpointProto() const {
    return value_type() == GetWorkerProcessEndpointErrorUnionProto::WorkerProcessEndpointProto ? static_cast<const WorkerProcessEndpointProto *>(value()) : nullptr;
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint8_t>(verifier, VT_VALUE_TYPE) &&
           VerifyOffset(verifier, VT_VALUE) &&
           VerifyGetWorkerProcessEndpointErrorUnionProto(verifier, value(), value_type()) &&
           verifier.EndTable();
  }
};

template<> inline const ErrorCodeResponseProto *GetWorkerProcessEndpointResponseProto::value_as<ErrorCodeResponseProto>() const {
  return value_as_ErrorCodeResponseProto();
}

template<> inline const WorkerProcessEndpointProto *GetWorkerProcessEndpointResponseProto::value_as<WorkerProcessEndpointProto>() const {
  return value_as_WorkerProcessEndpointProto();
}

struct GetWorkerProcessEndpointResponseProtoBuilder {
  typedef GetWorkerProcessEndpointResponseProto Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_value_type(GetWorkerProcessEndpointErrorUnionProto value_type) {
    fbb_.AddElement<uint8_t>(GetWorkerProcessEndpointResponseProto::VT_VALUE_TYPE, static_cast<uint8_t>(value_type), 0);
  }
  void add_value(flatbuffers::Offset<void> value) {
    fbb_.AddOffset(GetWorkerProcessEndpointResponseProto::VT_VALUE, value);
  }
  explicit GetWorkerProcessEndpointResponseProtoBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  flatbuffers::Offset<GetWorkerProcessEndpointResponseProto> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<GetWorkerProcessEndpointResponseProto>(end);
    return o;
  }
};

inline flatbuffers::Offset<GetWorkerProcessEndpointResponseProto> CreateGetWorkerProcessEndpointResponseProto(
    flatbuffers::FlatBufferBuilder &_fbb,
    GetWorkerProcessEndpointErrorUnionProto value_type = GetWorkerProcessEndpointErrorUnionProto::NONE,
    flatbuffers::Offset<void> value = 0) {
  GetWorkerProcessEndpointResponseProtoBuilder builder_(_fbb);
  builder_.add_value(value);
  builder_.add_value_type(value_type);
  return builder_.Finish();
}

struct GetWorkerProcessEndpointResponseProto::Traits {
  using type = GetWorkerProcessEndpointResponseProto;
  static auto constexpr Create = CreateGetWorkerProcessEndpointResponseProto;
};

inline bool VerifyGetWorkerProcessEndpointErrorUnionProto(flatbuffers::Verifier &verifier, const void *obj, GetWorkerProcessEndpointErrorUnionProto type) {
  switch (type) {
    case GetWorkerProcessEndpointErrorUnionProto::NONE: {
      return true;
    }
    case GetWorkerProcessEndpointErrorUnionProto::ErrorCodeResponseProto: {
      auto ptr = reinterpret_cast<const ErrorCodeResponseProto *>(obj);
      return verifier.VerifyTable(ptr);
    }
    case GetWorkerProcessEndpointErrorUnionProto::WorkerProcessEndpointProto: {
      auto ptr = reinterpret_cast<const WorkerProcessEndpointProto *>(obj);
      return verifier.VerifyTable(ptr);
    }
    default: return true;
  }
}

inline bool VerifyGetWorkerProcessEndpointErrorUnionProtoVector(flatbuffers::Verifier &verifier, const flatbuffers::Vector<flatbuffers::Offset<void>> *values, const flatbuffers::Vector<uint8_t> *types) {
  if (!values || !types) return !values && !types;
  if (values->size() != types->size()) return false;
  for (flatbuffers::uoffset_t i = 0; i < values->size(); ++i) {
    if (!VerifyGetWorkerProcessEndpointErrorUnionProto(
        verifier,  values->Get(i), types->GetEnum<GetWorkerProcessEndpointErrorUnionProto>(i))) {
      return false;
    }
  }
  return true;
}

#endif  // FLATBUFFERS_GENERATED_SERENITYINTERFACE_H_
