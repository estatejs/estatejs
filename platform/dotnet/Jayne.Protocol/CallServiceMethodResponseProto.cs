// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct CallServiceMethodResponseProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CallServiceMethodResponseProto GetRootAsCallServiceMethodResponseProto(ByteBuffer _bb) { return GetRootAsCallServiceMethodResponseProto(_bb, new CallServiceMethodResponseProto()); }
  public static CallServiceMethodResponseProto GetRootAsCallServiceMethodResponseProto(ByteBuffer _bb, CallServiceMethodResponseProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CallServiceMethodResponseProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ValueProto? ReturnValue { get { int o = __p.__offset(4); return o != 0 ? (ValueProto?)(new ValueProto()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<CallServiceMethodResponseProto> CreateCallServiceMethodResponseProto(FlatBufferBuilder builder,
      Offset<ValueProto> return_valueOffset = default(Offset<ValueProto>)) {
    builder.StartTable(1);
    CallServiceMethodResponseProto.AddReturnValue(builder, return_valueOffset);
    return CallServiceMethodResponseProto.EndCallServiceMethodResponseProto(builder);
  }

  public static void StartCallServiceMethodResponseProto(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddReturnValue(FlatBufferBuilder builder, Offset<ValueProto> returnValueOffset) { builder.AddOffset(0, returnValueOffset.Value, 0); }
  public static Offset<CallServiceMethodResponseProto> EndCallServiceMethodResponseProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CallServiceMethodResponseProto>(o);
  }
};

