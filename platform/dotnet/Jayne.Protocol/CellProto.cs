// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct CellProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static CellProto GetRootAsCellProto(ByteBuffer _bb) { return GetRootAsCellProto(_bb, new CellProto()); }
  public static CellProto GetRootAsCellProto(ByteBuffer _bb, CellProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CellProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Checksum { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public byte ValueBytes(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.Get(__p.__vector(o) + j * 1) : (byte)0; }
  public int ValueBytesLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<byte> GetValueBytesBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetValueBytesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetValueBytesArray() { return __p.__vector_as_array<byte>(6); }
  public ValueProto? GetValueBytesAsValueProto() { int o = __p.__offset(6); return o != 0 ? (ValueProto?)(new ValueProto()).__assign(__p.__indirect(__p.__vector(o)), __p.bb) : null; }

  public static Offset<CellProto> CreateCellProto(FlatBufferBuilder builder,
      uint checksum = 0,
      VectorOffset value_bytesOffset = default(VectorOffset)) {
    builder.StartTable(2);
    CellProto.AddValueBytes(builder, value_bytesOffset);
    CellProto.AddChecksum(builder, checksum);
    return CellProto.EndCellProto(builder);
  }

  public static void StartCellProto(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddChecksum(FlatBufferBuilder builder, uint checksum) { builder.AddUint(0, checksum, 0); }
  public static void AddValueBytes(FlatBufferBuilder builder, VectorOffset valueBytesOffset) { builder.AddOffset(1, valueBytesOffset.Value, 0); }
  public static VectorOffset CreateValueBytesVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateValueBytesVectorBlock(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); builder.Add(data); return builder.EndVector(); }
  public static void StartValueBytesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  public static Offset<CellProto> EndCellProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CellProto>(o);
  }
};

