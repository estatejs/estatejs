// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct PropertyProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static PropertyProto GetRootAsPropertyProto(ByteBuffer _bb) { return GetRootAsPropertyProto(_bb, new PropertyProto()); }
  public static PropertyProto GetRootAsPropertyProto(ByteBuffer _bb, PropertyProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PropertyProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(4); }
  public ValueProto? Value { get { int o = __p.__offset(6); return o != 0 ? (ValueProto?)(new ValueProto()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<PropertyProto> CreatePropertyProto(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      Offset<ValueProto> valueOffset = default(Offset<ValueProto>)) {
    builder.StartTable(2);
    PropertyProto.AddValue(builder, valueOffset);
    PropertyProto.AddName(builder, nameOffset);
    return PropertyProto.EndPropertyProto(builder);
  }

  public static void StartPropertyProto(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<ValueProto> valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<PropertyProto> EndPropertyProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // name
    return new Offset<PropertyProto>(o);
  }
};

