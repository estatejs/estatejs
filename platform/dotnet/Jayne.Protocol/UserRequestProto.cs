// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct UserRequestProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static UserRequestProto GetRootAsUserRequestProto(ByteBuffer _bb) { return GetRootAsUserRequestProto(_bb, new UserRequestProto()); }
  public static UserRequestProto GetRootAsUserRequestProto(ByteBuffer _bb, UserRequestProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public UserRequestProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte ProtocolVersion { get { int o = __p.__offset(4); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public string LogContext { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogContextBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetLogContextBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetLogContextArray() { return __p.__vector_as_array<byte>(6); }
  public ulong WorkerId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WorkerVersion { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public UserRequestUnionProto RequestType { get { int o = __p.__offset(12); return o != 0 ? (UserRequestUnionProto)__p.bb.Get(o + __p.bb_pos) : UserRequestUnionProto.NONE; } }
  public TTable? Request<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(14); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public CallServiceMethodRequestProto RequestAsCallServiceMethodRequestProto() { return Request<CallServiceMethodRequestProto>().Value; }
  public GetDataRequestProto RequestAsGetDataRequestProto() { return Request<GetDataRequestProto>().Value; }
  public SaveDataRequestProto RequestAsSaveDataRequestProto() { return Request<SaveDataRequestProto>().Value; }
  public SubscribeMessageRequestProto RequestAsSubscribeMessageRequestProto() { return Request<SubscribeMessageRequestProto>().Value; }
  public UnsubscribeMessageRequestProto RequestAsUnsubscribeMessageRequestProto() { return Request<UnsubscribeMessageRequestProto>().Value; }
  public SubscribeDataUpdatesRequestProto RequestAsSubscribeDataUpdatesRequestProto() { return Request<SubscribeDataUpdatesRequestProto>().Value; }
  public UnsubscribeDataUpdatesRequestProto RequestAsUnsubscribeDataUpdatesRequestProto() { return Request<UnsubscribeDataUpdatesRequestProto>().Value; }

  public static Offset<UserRequestProto> CreateUserRequestProto(FlatBufferBuilder builder,
      byte protocol_version = 0,
      StringOffset log_contextOffset = default(StringOffset),
      ulong worker_id = 0,
      ulong worker_version = 0,
      UserRequestUnionProto request_type = UserRequestUnionProto.NONE,
      int requestOffset = 0) {
    builder.StartTable(6);
    UserRequestProto.AddWorkerVersion(builder, worker_version);
    UserRequestProto.AddWorkerId(builder, worker_id);
    UserRequestProto.AddRequest(builder, requestOffset);
    UserRequestProto.AddLogContext(builder, log_contextOffset);
    UserRequestProto.AddRequestType(builder, request_type);
    UserRequestProto.AddProtocolVersion(builder, protocol_version);
    return UserRequestProto.EndUserRequestProto(builder);
  }

  public static void StartUserRequestProto(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddProtocolVersion(FlatBufferBuilder builder, byte protocolVersion) { builder.AddByte(0, protocolVersion, 0); }
  public static void AddLogContext(FlatBufferBuilder builder, StringOffset logContextOffset) { builder.AddOffset(1, logContextOffset.Value, 0); }
  public static void AddWorkerId(FlatBufferBuilder builder, ulong workerId) { builder.AddUlong(2, workerId, 0); }
  public static void AddWorkerVersion(FlatBufferBuilder builder, ulong workerVersion) { builder.AddUlong(3, workerVersion, 0); }
  public static void AddRequestType(FlatBufferBuilder builder, UserRequestUnionProto requestType) { builder.AddByte(4, (byte)requestType, 0); }
  public static void AddRequest(FlatBufferBuilder builder, int requestOffset) { builder.AddOffset(5, requestOffset, 0); }
  public static Offset<UserRequestProto> EndUserRequestProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 6);  // log_context
    return new Offset<UserRequestProto>(o);
  }
};

