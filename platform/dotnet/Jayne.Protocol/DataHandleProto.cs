// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct DataHandleProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static DataHandleProto GetRootAsDataHandleProto(ByteBuffer _bb) { return GetRootAsDataHandleProto(_bb, new DataHandleProto()); }
  public static DataHandleProto GetRootAsDataHandleProto(ByteBuffer _bb, DataHandleProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DataHandleProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort ClassId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }
  public ulong ObjectVersion { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string PrimaryKey { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrimaryKeyBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetPrimaryKeyBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetPrimaryKeyArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<DataHandleProto> CreateDataHandleProto(FlatBufferBuilder builder,
      ushort class_id = 0,
      ulong object_version = 0,
      StringOffset primary_keyOffset = default(StringOffset)) {
    builder.StartTable(3);
    DataHandleProto.AddObjectVersion(builder, object_version);
    DataHandleProto.AddPrimaryKey(builder, primary_keyOffset);
    DataHandleProto.AddClassId(builder, class_id);
    return DataHandleProto.EndDataHandleProto(builder);
  }

  public static void StartDataHandleProto(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddClassId(FlatBufferBuilder builder, ushort classId) { builder.AddUshort(0, classId, 0); }
  public static void AddObjectVersion(FlatBufferBuilder builder, ulong objectVersion) { builder.AddUlong(1, objectVersion, 0); }
  public static void AddPrimaryKey(FlatBufferBuilder builder, StringOffset primaryKeyOffset) { builder.AddOffset(2, primaryKeyOffset.Value, 0); }
  public static Offset<DataHandleProto> EndDataHandleProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 8);  // primary_key
    return new Offset<DataHandleProto>(o);
  }
};

