// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ArrayItemValueProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static ArrayItemValueProto GetRootAsArrayItemValueProto(ByteBuffer _bb) { return GetRootAsArrayItemValueProto(_bb, new ArrayItemValueProto()); }
  public static ArrayItemValueProto GetRootAsArrayItemValueProto(ByteBuffer _bb, ArrayItemValueProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ArrayItemValueProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Index { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public ValueProto? Value { get { int o = __p.__offset(6); return o != 0 ? (ValueProto?)(new ValueProto()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<ArrayItemValueProto> CreateArrayItemValueProto(FlatBufferBuilder builder,
      uint index = 0,
      Offset<ValueProto> valueOffset = default(Offset<ValueProto>)) {
    builder.StartTable(2);
    ArrayItemValueProto.AddValue(builder, valueOffset);
    ArrayItemValueProto.AddIndex(builder, index);
    return ArrayItemValueProto.EndArrayItemValueProto(builder);
  }

  public static void StartArrayItemValueProto(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddIndex(FlatBufferBuilder builder, uint index) { builder.AddUint(0, index, 0); }
  public static void AddValue(FlatBufferBuilder builder, Offset<ValueProto> valueOffset) { builder.AddOffset(1, valueOffset.Value, 0); }
  public static Offset<ArrayItemValueProto> EndArrayItemValueProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ArrayItemValueProto>(o);
  }
};

