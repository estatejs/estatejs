// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct WorkerIndexProto : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static WorkerIndexProto GetRootAsWorkerIndexProto(ByteBuffer _bb) { return GetRootAsWorkerIndexProto(_bb, new WorkerIndexProto()); }
  public static WorkerIndexProto GetRootAsWorkerIndexProto(ByteBuffer _bb, WorkerIndexProto obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public WorkerIndexProto __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsDebug { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public ulong WorkerId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public ulong WorkerVersion { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string WorkerName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWorkerNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetWorkerNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetWorkerNameArray() { return __p.__vector_as_array<byte>(10); }
  public WorkerFileNameProto? FileNames(int j) { int o = __p.__offset(12); return o != 0 ? (WorkerFileNameProto?)(new WorkerFileNameProto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FileNamesLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public sbyte WorkerLanguage { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public FreeFunctionProto? FreeFunctions(int j) { int o = __p.__offset(16); return o != 0 ? (FreeFunctionProto?)(new FreeFunctionProto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FreeFunctionsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public FreeClassProto? FreeClasses(int j) { int o = __p.__offset(18); return o != 0 ? (FreeClassProto?)(new FreeClassProto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FreeClassesLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ServiceClassProto? ServiceClasses(int j) { int o = __p.__offset(20); return o != 0 ? (ServiceClassProto?)(new ServiceClassProto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ServiceClassesLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public DataClassProto? DataClasses(int j) { int o = __p.__offset(22); return o != 0 ? (DataClassProto?)(new DataClassProto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DataClassesLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public MessageClassProto? MessageClasses(int j) { int o = __p.__offset(24); return o != 0 ? (MessageClassProto?)(new MessageClassProto()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MessageClassesLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<WorkerIndexProto> CreateWorkerIndexProto(FlatBufferBuilder builder,
      bool is_debug = false,
      ulong worker_id = 0,
      ulong worker_version = 0,
      StringOffset worker_nameOffset = default(StringOffset),
      VectorOffset file_namesOffset = default(VectorOffset),
      sbyte worker_language = 0,
      VectorOffset free_functionsOffset = default(VectorOffset),
      VectorOffset free_classesOffset = default(VectorOffset),
      VectorOffset service_classesOffset = default(VectorOffset),
      VectorOffset data_classesOffset = default(VectorOffset),
      VectorOffset message_classesOffset = default(VectorOffset)) {
    builder.StartTable(11);
    WorkerIndexProto.AddWorkerVersion(builder, worker_version);
    WorkerIndexProto.AddWorkerId(builder, worker_id);
    WorkerIndexProto.AddMessageClasses(builder, message_classesOffset);
    WorkerIndexProto.AddDataClasses(builder, data_classesOffset);
    WorkerIndexProto.AddServiceClasses(builder, service_classesOffset);
    WorkerIndexProto.AddFreeClasses(builder, free_classesOffset);
    WorkerIndexProto.AddFreeFunctions(builder, free_functionsOffset);
    WorkerIndexProto.AddFileNames(builder, file_namesOffset);
    WorkerIndexProto.AddWorkerName(builder, worker_nameOffset);
    WorkerIndexProto.AddWorkerLanguage(builder, worker_language);
    WorkerIndexProto.AddIsDebug(builder, is_debug);
    return WorkerIndexProto.EndWorkerIndexProto(builder);
  }

  public static void StartWorkerIndexProto(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddIsDebug(FlatBufferBuilder builder, bool isDebug) { builder.AddBool(0, isDebug, false); }
  public static void AddWorkerId(FlatBufferBuilder builder, ulong workerId) { builder.AddUlong(1, workerId, 0); }
  public static void AddWorkerVersion(FlatBufferBuilder builder, ulong workerVersion) { builder.AddUlong(2, workerVersion, 0); }
  public static void AddWorkerName(FlatBufferBuilder builder, StringOffset workerNameOffset) { builder.AddOffset(3, workerNameOffset.Value, 0); }
  public static void AddFileNames(FlatBufferBuilder builder, VectorOffset fileNamesOffset) { builder.AddOffset(4, fileNamesOffset.Value, 0); }
  public static VectorOffset CreateFileNamesVector(FlatBufferBuilder builder, Offset<WorkerFileNameProto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFileNamesVectorBlock(FlatBufferBuilder builder, Offset<WorkerFileNameProto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFileNamesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWorkerLanguage(FlatBufferBuilder builder, sbyte workerLanguage) { builder.AddSbyte(5, workerLanguage, 0); }
  public static void AddFreeFunctions(FlatBufferBuilder builder, VectorOffset freeFunctionsOffset) { builder.AddOffset(6, freeFunctionsOffset.Value, 0); }
  public static VectorOffset CreateFreeFunctionsVector(FlatBufferBuilder builder, Offset<FreeFunctionProto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFreeFunctionsVectorBlock(FlatBufferBuilder builder, Offset<FreeFunctionProto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFreeFunctionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFreeClasses(FlatBufferBuilder builder, VectorOffset freeClassesOffset) { builder.AddOffset(7, freeClassesOffset.Value, 0); }
  public static VectorOffset CreateFreeClassesVector(FlatBufferBuilder builder, Offset<FreeClassProto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFreeClassesVectorBlock(FlatBufferBuilder builder, Offset<FreeClassProto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFreeClassesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddServiceClasses(FlatBufferBuilder builder, VectorOffset serviceClassesOffset) { builder.AddOffset(8, serviceClassesOffset.Value, 0); }
  public static VectorOffset CreateServiceClassesVector(FlatBufferBuilder builder, Offset<ServiceClassProto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateServiceClassesVectorBlock(FlatBufferBuilder builder, Offset<ServiceClassProto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartServiceClassesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDataClasses(FlatBufferBuilder builder, VectorOffset dataClassesOffset) { builder.AddOffset(9, dataClassesOffset.Value, 0); }
  public static VectorOffset CreateDataClassesVector(FlatBufferBuilder builder, Offset<DataClassProto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDataClassesVectorBlock(FlatBufferBuilder builder, Offset<DataClassProto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDataClassesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMessageClasses(FlatBufferBuilder builder, VectorOffset messageClassesOffset) { builder.AddOffset(10, messageClassesOffset.Value, 0); }
  public static VectorOffset CreateMessageClassesVector(FlatBufferBuilder builder, Offset<MessageClassProto>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMessageClassesVectorBlock(FlatBufferBuilder builder, Offset<MessageClassProto>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMessageClassesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<WorkerIndexProto> EndWorkerIndexProto(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 10);  // worker_name
    builder.Required(o, 12);  // file_names
    return new Offset<WorkerIndexProto>(o);
  }
  public static void FinishWorkerIndexProtoBuffer(FlatBufferBuilder builder, Offset<WorkerIndexProto> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedWorkerIndexProtoBuffer(FlatBufferBuilder builder, Offset<WorkerIndexProto> offset) { builder.FinishSizePrefixed(offset.Value); }
};

